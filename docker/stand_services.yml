version: "3.8"
services:
  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "8000:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    restart: always
    networks:
      - marketplace-net

  marketplace-db:
    image: postgres:13
    container_name: marketplace-db
    environment:
      POSTGRES_PASSWORD: "${POSTGRES_PASS:-usr}"
      POSTGRES_USER: "${POSTGRES_USER:-usr}"
      POSTGRES_DB: "${POSTGRES_DB:-marketplace}"
      POSTGRES_HOST: marketplace-db
    ports:
      - "5430:5432"
    restart: always
    networks:
      - marketplace-net

  zookeeper:
    image: confluentinc/cp-zookeeper:6.2.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - marketplace-net
      
  kafka-broker:
    image: confluentinc/cp-kafka:7.0.0
    container_name: kafka-broker
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_INTERNAL:PLAINTEXT,LISTENER_EXTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: LISTENER_INTERNAL://kafka-broker:29092,LISTENER_EXTERNAL://localhost:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    networks:
      - marketplace-net

  redis:
    image: redis:7.0.2
    container_name: redis
    hostname: localhost
    ports:
      - "6378:6379"
    expose:
      - "6379"
    command: redis-server --requirepass "${REDIS_PASS:-redis}"
    restart: always
    environment:
      REDIS_PASSWORD: "${REDIS_PASS:-redis}"
      REDIS_REPLICATION_MODE: master
    networks:
      - marketplace-net

  prometheus:
    image: prom/prometheus:main
    container_name: prometheus
    ports:
      - "9050:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command: --config.file=/etc/prometheus/prometheus.yml
    networks:
      - marketplace-net
  
  loki:
    image: grafana/loki:2.8.0
    container_name: loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - marketplace-net

  promtail:
    image: grafana/promtail:2.8.0
    container_name: promtail
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - ./promtail-config.yaml:/etc/promtail/docker-config.yaml
    command: -config.file=/etc/promtail/docker-config.yaml
    depends_on:
      - loki
    networks:
      - marketplace-net

  grafana:
    image: grafana/grafana:main-ubuntu
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - ./grafana-config.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
    networks:
      - marketplace-net

  sonarqube:
    image: sonarqube:8.9.0-community
    container_name: sonarqube
    ports:
      - "9005:9000"
    environment:
      - SONAR_FORCEAUTHENTICATION=false
    networks:
      - marketplace-net

networks:
  marketplace-net:
    external:
      name: marketplace-net
